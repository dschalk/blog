{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/transition/index.mjs","../src/Monad.svelte","../src/Monad2.svelte","../src/Monad3.svelte","../src/Matrix.svelte","../src/Transducer.svelte","../src/ToggleTheme.svelte","../src/Blog.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, dirty_components, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_input_value, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { cubicOut, cubicInOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction fade(node, { delay = 0, duration = 400 }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { crossfade, draw, fade, fly, scale, slide };\n","\n<script>\nimport {fade} from \"svelte/transition\"\nlet visible = true;\n\nlet monadDisplay = `function Monad (z) {\n    var x = z;\n    var foo = function foo (func) {\n        var stop = 'stop';\n        if (func.name === 'stop') return x\n        else {\n            x = func(x);\n            return foo;\n        }\n    };\n    return foo;\n}\n\nconst prod = a => b => a*b;\nconst sum = a => b => a+b;`\n\nlet bonadsD = `function bonads(num) {\nreturn [Monad(num)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-1)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-2)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-3)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-2)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-1)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-0)(sum(7))(prod(4))(v=>v-10)(stop)]}`\n\nlet axe = `\nlet mon = Monad(3);\nlet a = mon(x=>x**3)(x=>x+3)(x=>x**2)(stop);\nconsole.log(\"a is\", a)  // a is 900`\n\nlet tree = `\nmon(x => x/100)\nconsole.log(\"mon(stop) now is\",mon(stop))  // mon(stop) now is 9 `\n\nlet fred = `\nlet ar = [];\nlet mon = Monad(3);\nlet mon2 = Monad();\nar.push(mon(stop));\nvar a = mon(x=>x**3)(x=>x+3)(x=>x**2)\nar.push(a);\nar.push(mon(x => x/100);\nar.push(mon2(mon(stop)(x=>x*100)))\nconsole.log(\"ar.map(v=>v('stop')) is\", ar.map(v=>v('stop')))  // [3, 900, 9] `\n\nfunction Monad (z) {\n  var x = z;\n  var stop = \"stop\";\n  var foo = function foo (func) {\n    if (func.name === \"stop\") return x\n    else {\n      x = func(x);\n      return foo;\n    }\n  };\n  return foo;\n}\n\nconst prod = a => b => a*b;\nconst sum = a => b => a+b;\n\nlet num = 6;\n\nlet bonads = function bonads(num) {\nreturn [Monad(num)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-1)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-2)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-3)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-2)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-1)(sum(7))(prod(4))(v=>v-10)(stop),\nMonad(num-0)(sum(7))(prod(4))(v=>v-10)(stop)]}\n\n\nlet mona = bonads(num);\n$: mona\nconsole.log(mona)\n\nfunction numF (e) {num = e.target.value; console.log(\"e.target.value is\", e.target.value); return e.target.value}\n$: num\n\nconsole.log(\"num is\", num);\n</script>\n\n<style>\n.tao {\n  margin-left: 3%;\n}\n\nh3 {\n   font-size: 27px;\n}\n\n#aside {\n    font-size: 18px;\n    color: #eeaaff;\n    font-style: italic;\n}\n</style>\n<br><br><br>\n {#if visible}\n \t<div style = \"font-family: Times New Roman;  text-align: center; color: hsl(210, 90%, 90%); font-size: 32px;\" transition:fade>\nA SIMPLE LITTLE MONAD\n \t</div>\n {/if}\n <br>\n<span class=\"tao\"> The word \"monad\" has been around for centuries. Gottfried Leibniz published </span>\n<span style = \"font-style: italic\"> Monadology </span>\n<span> in 1714. The precursor to the familiar symbol of yin-yang, taijitu (太極圖), has a version with two dots added, has been given the august designation: \"The Great Monad\". A single note in music theory is called a monad. All of this is too tangential to warrant references. I Googled around a little to get it and you can too if the word \"monad\" interests you.</span>\n<p> Monads in the Haskell Programming Language were inspired by Category Theory monads. In order to be Category Theory monads, function must exist in a mathematically rigorous \"category\". Haskells objects and functions are not the objects and morphisms of Category Theory. Making a category out of most of Haskell's functions and types is an amusing pasttime for some people, but I doubt that it has any practical value. </p>\n<p> So it should be no surprise that my JavaScript monads are not Category Theory monads. They do obey a JavaScript version of the Haskell monad laws, which are not a requirement in Haskell but are indicative of utility and robustness objects (including functions) don't constitute a category. But functions that hold values and compose with multiple functions that operate on their values behave like Category Theory monads enough to justify calling them \"monads\".</p>\n<p> Here's the definitions of three functions: </p>\n<pre>{monadDisplay}</pre>\n<p> And here is an anonymous monad followed by three functions and \"stop\". : </p>\n<pre> Monad(6)(sum(7))(prod(4))(v=>v-10)(stop) // 42 </pre>\n<p> Anonymous monads never interfere with other monads. The demonstration below illustrates this by running seven anonymous monads in rapid succession. The number you enter is \"num\" in </p>\n{bonadsD}\n<input id = \"one\" type = \"number\" on:input={bonads}  bind:value={num} />\n<p> num is {num} so bonads(num) returns {bonads(num)} </p>\n\n<span class = tao> Named monads retain their values, even after they encounter \"stop\" and return the value of x held in the Monad closure. The following examples illustrate this: </span>\n<pre>\n{axe}\n</pre>\n\n<p> As expected, mon returns which is the \"foo()\" returned by by calling Monad(3):</p>\n\n<p> mon is still the foo() returned by Monad(). Because mon points to x in the context of its creation by Monad(), x will not be garbage collected. Care should be taken not to polute memory with useless x's.</p>\n\n<p> One reason Svelte is so fast and efficient is that it mutates variables and the attributes and methods of objects. Each module in a discrete global space.  When modules are small, applications are easy to organize and mutations don't have unforseen effects in other parts of applications. Svelte shook off the bonds of current conventional \"wisdom\" advocating immutability, virtual DOM, and assigning types to functions. </p>\n<p> The next entry in the monad series defines a variation of Monad that maintains and array of primitive data, function return values, and Promise resolution values. Functions have access to everything in the array when they execute. </p>\n","\n\n\n<script>\nimport {fade} from \"svelte/transition\"\nlet visible = true;\n\n   async function pause (x) {\n      await wait(1000)\n      return x;\n    }\n\n    var pauseP = t => async x => {\n      await wait(t*1000)\n      return x;\n    }\n\n    async function pauseM (x) {\n      await wait(600)\n      return Monad(x);\n    }\n\n    async function pauseX (x) {\n      await wait(x);\n    }\n\n    async function squareP (x) {\n      await wait(1200)\n      return x*x;\n    }\n\n    var divPinverse = a => async b => {\n      await wait (600)\n      return a/b;\n    }\n\n    var divP = a => async b => {\n      await wait (600)\n      return b/a;\n    }\n\n    var doubleP = async a => {\n      await wait (1000)\n      return a+a;\n    }\n\n    var toInt = a => parseInt(a, 10);\n\n    var addP_toInt = x => async y => {\n      await wait(1000)\n      return toInt(x) + toInt(y);\n    }\n\n    var addP = x => async y => {\n      await wait(1000)\n      return x + y;\n    }\n\n    var multP = x => async y => {\n      await wait(1200)\n      return x * y;\n    }\n\n    var powP = x => async y => {\n      await wait(1200)\n      return y**x;\n    }\n\n    async function cubeP (x) {\n      await wait(1200)\n      return x*x*x;\n    }\n\n    async function idP (x) {\n      await wait(1200)\n      return x;\n    }\n    async function sqrtP (x) {\n      await wait(1200)\n      return x**(1/2)\n    }\n\n    function intArray (n) {\n      return [...Array(n).keys()];\n    }\n\n    function wait(ms) {\n       return new Promise(r => setTimeout(r, ms));\n    }\n\n    var cube = x => x**3;\n    var pow = p => x => x**p;\n    var square = x => x*x;\n    var add = x => y => x+y;\n    var sqrt = x => x**(1/2);\n    var root = r => x => x(1/r);\n    var div = d => x => x/d;\n\n   var f = function f () {};\n   var f_ = function f_ () {};\n   var sto = \"sto\";\n   var halt = \"halt\";\n\n   var O = new Object();\n   $: O;\n\n   var M = -1;\n   $: M;\n   var N = -1;\n   $: N;\n   var T = -1;\n   $: T;\n   var Q = -1\n   $: Q;\n\n   var lock = false;\n   $: lock\n\n   var Monad = function Monad ( AR = [], name = \"generic\"  )  {\n     var f_, p, run;\n     var ar = AR.slice();\n     var name = name;\n     O[name] = ar;\n     let x = O[name].pop();\n     return run = (function run (x) {\n     if (x != undefined && x === x  && x !== false\n       && x.name !== \"f_\" && x.name !== \"halt\" ) {\n         O[name] = O[name].concat(x)\n       };\n       function f_ (func) {\n         if (func === 'halt' || func === 'S') return O[name];\n         else if (typeof func !== \"function\") p = func;\n         else if (x instanceof Promise) p = x.then(v => func(v));\n         else p = func(x);\n         return run(p);\n       };\n       return f_;\n     })(x);\n   }\n\n    /* let a0 = *Monad([3])(cube)\n     (add(3))(square)(div(100))\n     (sqrt)(()=>this)(halt); */\n\n   // var socket = new WebSocket(\"ws://localhost:3055\")\n   var socket = new WebSocket(\"ws://167.71.168.53:3055\")\n\n   socket.onclose = function (event) {\n     console.log('<><><> ALERT - socket is closing. <><><> ', event);\n   };\n\n   socket.onmessage = function(e) {\n     // console.log(\"WebSocket message is\", e);\n     var v = e.data.split(',');\n     if (v[0] === \"BE#$42\") {\n       Q = Q + 1;\n       Monad([v[3]], \"c\"+Q);\n       worker_O.postMessage([v[3]])\n     }\n   }\n\n  login();\n\n   function login() {\n     console.log('00000000000000000000000000000000 Entering login', socket.readyState);\n     setTimeout(function () {\n       if (socket.readyState === 1) {\n         console.log('readyState is', socket.readyState);\n         var v = Math.random().toString().substring(5);\n         var v2 = v.toString().substring(2);\n         var combo = v + '<o>' + v2;\n         socket.send('CC#$42' + combo);\n         // socket.send(`GZ#$42,solo,${v}`);\n       } else {\n         login();\n       }\n     }, 200)\n   }\n\n   function isEmpty(obj) {\n       for(var key in obj) {\n           if(obj.hasOwnProperty(key))\n               return false;\n       }\n       return true;\n   };\n\n   function countKeys(ob, s) {\n      var N = 0\n      for(var key in ob) if (key.startsWith(s)) N+=1;\n      return N;\n   }\n\n   var groupDelete = function groupDelete (ob, x) {\n      for (var z in ob) if (z.startsWith(\"x\")) delete ob[z]\n   }\n\n   var clearOb = function clearOb (ob) {\n      for (var x in ob) delete ob[x]\n   }\n\n   function factors () {\n      if (lock === false) {\n         lock = true;\n         clearOb(O);\n         N = -1;\n         M = -1;\n         Q = -1;\n         groupDelete(O, \"c\");\n         groupDelete(O, \"d\");\n         fact();\n      }\n      else {\n         setTimeout(()=> {\n         factors()\n      },1000)\n      }\n   }\n\n   var fact = function fact () {\n      socket.send(\"BE#$42,solo,name,10000\")\n      socket.send(\"BE#$42,solo,name,1000\")\n      socket.send(\"BE#$42,solo,name,100000\")\n      socket.send(\"BE#$42,solo,name,100000\")\n      socket.send(\"BE#$42,solo,name,10000\")\n      socket.send(\"BE#$42,solo,name,100000\")\n      socket.send(\"BE#$42,solo,name,1000\")\n      socket.send(\"BE#$42,solo,name,1000\")\n      socket.send(\"BE#$42,solo,name,100000\")\n      socket.send(\"BE#$42,solo,name,10000\")\n      socket.send(\"BE#$42,solo,name,100000\")\n      socket.send(\"BE#$42,solo,name,100\")\n      socket.send(\"BE#$42,solo,name,100000\")\n      socket.send(\"BE#$42,solo,name,10000\")\n      socket.send(\"BE#$42,solo,name,100000\")\n\n   }\n\n   /*   if (countKeys(O) > 34) {\n           setTimeout( () => {\n           N = -1;\n           M = -1;\n           Q = -1;\n           clearOb(O);\n           factors();\n       },700)\n   } */\n\n   var worker_O = new Worker('worker_O.js');\n\n   worker_O.onmessage = e => {\n     M = M = M + 1;\n     Monad([e.data], \"d\"+M);\n     if (M === 14) {\n        M = -1;\n        N = -1;\n       lock = false;\n     }\n   }\n\n  var mon = `   var Monad = function Monad ( AR = [], name, = \"generic\"  )  {\n       var f_, p, run;\n       var ar = AR.slice();\n       var name, = name,;\n       O[name,] = ar;y-value pairs on O out of each monad's monad's name, and array\n       let x = O[name,].pop();\n       return run = (function run (x) {\n       if (x != undefined && x === x  && x !== false\n         && x.name, !== \"f_\" && x.name, !== \"halt\" ) {\n           O[name,] = O[name,].concat(x)\n         };\n         function f_ (func) {\n           if (func === 'halt' || func === 'S') return O[name,];\n           else if (typeof func !== \"function\") p = func;\n           else if (x instanceof Promise) p = x.then(v => func(v));\n           else p = func(x);\n           return run(p);\n         };\n         return f_;\n       })(x);\n    } `\n\n  var statement = `    Monad([\"value\"], \"key\")(x => \"This is the \" + x)(x => x + \".\")(halt)\n    O.key   // [\"value\", \"This is the value\", \"This is the value.\"]`\n\n  var fa = `    function factors () {\n     if (lock === false) {\n        lock = true;\n        clearOb(O);\n        N = -1;\n        M = -1;\n        Q = -1;\n        groupDelete(O, \"c\");\n        groupDelete(O, \"d\");\n        fact();\n     }\n     else {\n        setTimeout(()=> {\n        factors()\n     },1000)\n     }\n  }`\n\nvar fac = `  var fact = function fact () {\n   socket.send(\"BE#$42,solo,name,10000\")\n   socket.send(\"BE#$42,solo,name,1000\")\n   socket.send(\"BE#$42,solo,name,100000\")\n   socket.send(\"BE#$42,solo,name,100000\")\n   socket.send(\"BE#$42,solo,name,10000\")\n   socket.send(\"BE#$42,solo,name,100000\")\n   socket.send(\"BE#$42,solo,name,1000000\")\n   socket.send(\"BE#$42,solo,name,1000\")\n   socket.send(\"BE#$42,solo,name,1000000\")\n   socket.send(\"BE#$42,solo,name,10000\")\n   socket.send(\"BE#$42,solo,name,100000\")\n   socket.send(\"BE#$42,solo,name,100000\")\n   socket.send(\"BE#$42,solo,name,100000\")\n   socket.send(\"BE#$42,solo,name,10000\")\n   socket.send(\"BE#$42,solo,name,100000\")\n\n}`\n\n  var onmessServer = `  ar v = e.data.split(',');\n  if (v[0] === \"BE#$42\") {\n    Q = Q + 1;\n    Monad([v[3]], \"c\"+Q);\n    worker_O.postMessage([v[3]])\n  }\n}  `\n\n  var onmessWorker = `    worker_O.onmessage = e => {\n     M = M = M + 1;\n     Monad([e.data], \"d\"+M);\n     if (M === 14) {\n        M = -1;\n        N = -1;\n       lock = false;\n     }\n   } `\n</script>\n\n<br><br><br>\n{#if visible}\n\t<div style = \"font-family: Times New Roman;  text-align: center; color: hsl(210, 90%, 90%); font-size: 32px;\" transition:fade>\nASYNCHRONOUS MONAD\n\t</div>\n{/if}\n<br><br>\n<p> If you click execute multiple times in rapid succession, you will see that execution waits until previous runs have completed. This feature was implemented with the Boolean variable \"lock\". </p>\n<br><br>\n<button on:click = {factors}>EXECUTE factors()</button>\n<br><br>\n<span style = \"color: #EEBBBB\"> The WebSockets server sent these pseudo-random numbers: </span>\n<span> {O.c0}, {O.c1}, {O.c2}, {O.c3}, {O.c4}, {O.c5}, {O.c6}, {O.c7}, {O.c8}, {O.c9}, {O.c10}, {O.c11}, {O.c12}, {O.c13}, {O.c14}</span>\n<br><br>\n<div style = \"color: #EEBBBB\"> The web worker sent these results: </div>\n<div>\n{O.d0}\n<br>\n{O.d1}\n<br>\n{O.d2}\n<br>\n{O.d3}\n<br>\n{O.d4}\n<br>\n{O.d5}\n<br>\n{O.d6}\n<br>\n{O.d7}\n<br>\n{O.d8}\n<br>\n{O.d9}\n<br>\n{O.d10}\n<br>\n{O.d11}\n<br>\n{O.d12}\n<br>\n{O.d13}\n<br>\n{O.d14}\n<br>\n</div>\n<br>\n<p> There are many ways to display the behavior of monads returned by Monad(). For this demonstration, a simple object name,d \"O\" was created and Monad was modified to make the name,s of monads attributes pointing to the monads'internal arrays. Here's the revised definition of Monad.</p>\n<pre>{mon}</pre>\nThe statement \"Monad(['value\"], 'key\")(x => 'This is the ' + x)(x => x + '.')(halt)\" attaches the the resulting monad to O as follows:\n<pre>{statement}</pre>\n<p> The demonstration procedure is initiated by calling factors().\n<pre>{fa}</pre>\n<p> factor() is called once every second until lock === false; then, lock is set to true and fact() is called. The lock assures that the procedures initiated by fact() will complete before fact() is called again. </p>\n<pre>{fac}</pre>\n<p> Messages are sent to the Haskell WebSockets server requesting random numbers between 1 and the integer specified at the end of the request. randomR from the System.Random library produces a number which is sent back to the browser with prefix \"BE#$42\". Messages from the server are parsed and processed in socket.onmessage, which requests the random number's prime decomposition from worker_O.\n<pre>{onmessServer}</pre>\n<p> Messages from the web worker are processed in worker_O.onmessage\n<pre>{onmessWorker}</pre>\n<p> When M === 14 the process is complete. M and N are set to -1 and lock is set to false, allowing another possible call to random() to call rand(). </p>\n<br>\n<span> The code for this Svelte application is at </span>\n<a href = \"https://github.com/dschalk/blog/\" target = \"_blank\">GitHub repository</a>\n","\n<script>\n    import {fade} from \"svelte/transition\"\n    let visible = true;\n\n    async function pause (x) {\n      await wait(1000)\n      return x;\n    }\n\n    var pauseP = t => async x => {\n      await wait(t*1000)\n      return x;\n    }\n\n    async function pauseM (x) {\n      await wait(600)\n      return ret(x);\n    }\n\n    async function pauseX (x) {\n      await wait(x);\n    }\n\n    async function squareP (x) {\n      await wait(500)\n      return x*x;\n    }\n\n    var divPinverse = a => async b => {\n      await wait (500)\n      return a/b;\n    }\n\n    var divP = a => async b => {\n      await wait (500)\n      return b/a;\n    }\n\n    var doubleP = async a => {\n      await wait (500)\n      return a+a;\n    }\n\n    var toInt = a => pareseInt(a, 10);\n\n    var addP_toInt = x => async y => {\n      await wait(500)\n      return toInt(x) + toInt(y);\n    }\n\n    var addP = x => async y => {\n      await wait(500)\n      return x + y;\n    }\n\n    var multP = x => async y => {\n      await wait(500)\n      return x * y;\n    }\n\n    var powP = x => async y => {\n      await wait(500)\n      return y**x;\n    }\n\n    async function cubeP (x) {\n      await wait(500)\n      return x*x*x;\n    }\n\n    async function idP (x) {\n      await wait(500)\n      return x;\n    }\n    async function sqrtP (x) {\n      await wait(500)\n      return x**(1/2)\n    }\n\n    var _conveNt_ = a => b => parseFloat(b,a);\n    var toFloat = _conveNt_ (10);\n\n    function intArray (n) {\n      return [...Array(n).keys()];\n    }\n\n    function wait(ms) {\n       return new Promise(r => setTimeout(r, ms));\n    }\n\n    var cube = x => x**3;\n    var pow = p => x => x**p;\n    var square = x => x*x;\n    var add = x => y => x+y;\n    var sqrt = x => x**(1/2);\n    var root = r => x => x(1/r);\n    var div = d => x => x/d;\n\n   var f = function f () {};\n   var f_ = function f_ () {};\n   var sto = \"sto\";\n   var halt = \"halt\";\n\n   var O = new Object();\n   $: O;\n\n   var M = -1;\n   $: M;\n   var N = -1;\n   $: N;\n   var T = -1;\n   $: T;\n   var Q = -1\n   $: Q;\n\n   var lock = false;\n   $: lock\n\n   var Monad = function Monad ( AR = [], name = \"generic\"  )  {\n     var f_, p, run;\n     var ar = AR.slice();\n     var name = name;\n     O[name] = ar;\n     let x = O[name].pop();\n     return run = (function run (x) {\n       if (x instanceof Promise) x.then(y => {\n         console.log(x, \"is a Promise\");\n         if (y != undefined && y == y && y.name !== \"f_\") {\n         O[name] = O[name].concat(y)\n         }\n       })\n       if (!(x instanceof Promise)) {\n          console.log(x, \"is not a promise\");\n          if (x != undefined && x == x) {\n             O[name] = O[name].concat(x)\n          }\n       }\n       function f_ (func) {\n         if (func === 'halt' || func === 'S') return O[name].slice();\n         else if (typeof func !== \"function\") p = func;\n         else if (x instanceof Promise) p = x.then(v => func(v));\n         else p = func(x);\n         return run(p);\n       };\n       return f_;\n     })(x);\n  }\n\n   var branch = function branch (s,s2) {return Monad(O[s].slice(-1)  , s2)}\n   var resume = function resume (s) {return Monad(O[s], s)}\n\n   Monad([2], \"test\")(addP(1))(cubeP)(addP(3))(squareP)(divP(100))\n   (() => branch(\"test\", \"test_2\")(sqrtP)(cubeP)(()=>addP(O.test_2[2])\n   (O.test_2[1]))(squareP)(divP(100))(sqrtP)(multP(14))\n   (() => resume(\"test\")(multP(4))(addP(6))))\n\n   setTimeout(()=>console.log(\"O is\", O),15000)\n\nvar mon = `   var Monad = function Monad ( AR = [], name = \"generic\"  )  {\n     var f_, p, run;\n     var ar = AR.slice();\n     var name = name;\n     O[name] = ar;\n     let x = O[name].pop();\n     return run = (function run (x) {\n       if (x instanceof Promise) x.then(y => {\n         console.log(x, \"is a Promise\");\n         if (y != undefined && y == y && y.name !== \"f_\") {\n         O[name] = O[name].concat(y)\n         }\n       })\n       if (!(x instanceof Promise)) {\n          console.log(x, \"is not a promise\");\n          if (x != undefined && x == x) {\n             O[name] = O[name].concat(x)\n          }\n       }\n       function f_ (func) {\n         if (func === 'halt' || func === 'S') return O[name].slice();\n         else if (typeof func !== \"function\") p = func;\n         else if (x instanceof Promise) p = x.then(v => func(v));\n         else p = func(x);\n         return run(p);\n       };\n       return f_;\n     })(x);\n  }`\n\n  var lok = false;\n\n  var start = function start () {\n     if (!lok) {\n       lok = true;\n       setTimeout(() => lok = false,6000 );\n       O = {};\n       Monad([2], \"test\")(addP(1))(cubeP)(addP(3))(squareP)(divP(100))\n       (() => branch(\"test\", \"test_2\")(sqrtP)(cubeP)(()=>addP(O.test_2[2])\n       (O.test_2[1]))(squareP)(divP(100))(sqrtP)(multP(14))\n       (() => resume(\"test\")(multP(4))(addP(6)))) }\n     else {\n       setTimeout(() => start(),1500);\n     }\n  }\n\nvar fs = `   var branch = function branch (s,s2) {return Monad(O[s].slice(-1)  , s2)}\n   var resume = function resume (s) {return Monad(O[s], s)}`\nvar code = `    Monad([2], \"test\")(addP(1))(cubeP)(addP(3))(squareP)(divP(100))\n     (() => branch(\"test\", \"test_2\")(sqrtP)(cubeP)(()=>addP(O.test_2[2])\n     (O.test_2[1]))(squareP)(divP(100))(sqrtP)(multP(14))\n     (() => resume(\"test\")(multP(4))(addP(6))))`\n</script>\n{#if visible}\n <div style = \"font-family: Times New Roman;  text-align: center; color: hsl(210, 90%, 90%); font-size: 32px;\" transition:fade>\n <br><br>\nHandling Promises With Monads\n </div>\n{/if}\n<br>\n<h2>O.test is {O.test}</h2>\n<h2>O.test_2 is {O.test_2}</h2>\n<br>\n<button on:click = {start}>START</button>\n<br>\n<p> Here's the modified monad constructor: </p>\n<pre>{mon}</pre>\n<p> After monads encounter \"halt\", they can use the function resume() to continue processing data where they left off and (2) they can branch off in new monads created by branch(). Here are the definitions:</p>\n<pre>{fs}</pre>\n<p> This is the statement that produces the observed results when \"START\" is clicked. </p>\n<pre>{code}</pre>\n<br>\n<button on:click = {start}>START</button>\n\n<h2>O.test is {O.test}</h2>\n<h2>O.test_2 is {O.test_2}</h2>\n<br>\n<span class = \"tao\"> Notice the statement: </span>\n<span style = \"color: #AAFFAA\">()=>addP(O.test_2[2])(O.test_2[1])</span>\n<span>. Promises in chains of ES6 Promises can't access previous Promise resolution values. One way to get access to prior resolution values is to encapsulate Promise chains in Monad(). This also makes it convenient to resume or branch from terminated computation chains; and this can be accomplished without naming the chains. </span>\n","<script>\nimport {fade} from \"svelte/transition\"\nlet visible = true;\n\n  var cache = [[1,2,3,4,5,6,7,8,9]];\n  var j = 0;\n  var ob = {x: [], push: function push (e) {\n     ob.x.push(parseInt(e.target.id.slice(1,2), 10));\n     if (ob.x.length >1) {\n         var d = exchange(ob.x[0], ob.x[1]);\n         cache.splice(j+1,0,d);\n         ob.x = [];\n         j+=1;\n         return cache;   var j = 0;\n        }\n     }\n  }\n\n   function exchange (k,n) {\n      var ar = cache[j].slice();\n      var a = ar[k]\n      ar[k] = ar[n];\n      ar[n] = a;\n      return ar;\n   }\n\n   var back = function back () {\n      if (j > 0) j = j-=1;\n      else j = j;\n   }\n\n   var forward = function forward () {\n      if (j+1 < cache.length) j = j+=1;\n      else j = j;\n    }\n\n    $: j\n\n     var cache = [[1,2,3,4,5,6,7,8,9]];\n     var j = 0;\n     $: j\n     var ob = {x: [], push: function push (e) {\n        ob.x.push(parseInt(e.target.id.slice(1,2), 10));\n        if (ob.x.length >1) {\n            var d = exchange(ob.x[0], ob.x[1]);\n            cache.splice(j+1,0,d);\n            ob.x = [];\n            j+=1;\n            return cache;\n           }\n        }\n     }\nvar code = `\n  var cache = [[1,2,3,4,5,6,7,8,9]];\n  var j = 0;\n  var ob = {x: [], push: function push (e) {\n     ob.x.push(parseInt(e.target.id.slice(1,2), 10));\n     if (ob.x.length >1) {\n         var d = exchange(ob.x[0], ob.x[1]);\n         cache.splice(j+1,0,d);\n         ob.x = [];\n         j+=1;\n         return cache;   var j = 0;\n        }\n     }\n  }\n\n   function exchange (k,n) {\n      var ar = cache[j].slice();\n      var a = ar[k]\n      ar[k] = ar[n];\n      ar[n] = a;\n      return ar;\n   }\n\n   var back = function back () {\n      if (j > 0) j = j-=1;\n      else j = j;\n   }\n\n   var forward = function forward () {\n      if (j+1 < cache.length) j = j+=1;\n      else j = j;\n    }\n\n    $: j\n\n     var cache = [[1,2,3,4,5,6,7,8,9]];\n     var j = 0;\n     $: j\n     var ob = {x: [], push: function push (e) {\n        ob.x.push(parseInt(e.target.id.slice(1,2), 10));\n        if (ob.x.length >1) {\n            var d = exchange(ob.x[0], ob.x[1]);\n            cache.splice(j+1,0,d);\n            ob.x = [];\n            j+=1;\n            return cache;\n           }\n        }\n     }`;\n\nvar html = `{#if visible}\n <div style = \"font-family: Times New Roman;  text-align: center; color: hsl(210, 90%, 90%); font-size: 32px;\" transition:fade>\n <br><br>\n A LITTLE SVELTE MODULE\n </div>\n{/if}\n\n                        <div style = \"display: flex\">\n                        <div style = \"margin-Left: 2%; width: 50%\" >\n\n<p> If you click any two numbers (below), they switch locations and a \"BACK\" button appears. If you go back and click two numbers, the result gets inserted  at your location.</p>\n<br>\t<button on:click={back}>\n\t\tBACK\n\t</button>\n<br>\n<br>\n\n   <div style=\"text-indent:20px\"><button>{ j }</button></div>\n<br>\n\t<button on:click={forward}>\n\t\tFORWARD\n\t</button>\n                        </div>\n                     <div style = \"marginRight: 2%; width: 50%; font-size: 30\">\n<br><br><br><br><br><p>Suck my dick</p>\n<button id = m0  on:click = {ob.push} >{cache[j][0]}</button>\n<button id = m1  on:click = {ob.push} >{cache[j][1]}</button>\n<button id = m2  on:click = {ob.push} >{cache[j][\n   2]}</button>\n<br>\n<br>\n<button id = m3  on:click = {ob.push} >{cache[j][3]}</button>\n<button id = m4  on:click = {ob.push} >{cache[j][4]}</button>\n<button id = m5  on:click = {ob.push} >{cache[j][5]}</button>\n<br>\n<br>\n<button id = m6  on:click = {ob.push} >{cache[j][6]}</button>\n<button id = m7  on:click = {ob.push} >{cache[j]\n   [7]}</button>\n<button id = m8  on:click = {ob.push} >{cache[j][8]}</button>\n</div>\n</div>\n<p> This is the JavaScript code inside of the script tags except for the definitions of the variables \"code\" and \"html\", which are just the code and html cut and pasted inside of back quotes: </p>\n<pre>{code}</pre>\n<p> And here is the HTML code: </p>\n<pre>{html}</pre>\n<p> Is Svelte awesome, or what? </p> `\n</script>\n{#if visible}\n <div style = \"font-family: Times New Roman;  text-align: center; color: hsl(210, 90%, 90%); font-size: 32px;\" transition:fade>\n <br><br>\n A LITTLE SVELTE MODULE\n </div>\n{/if}\n                        <div style = \"display: flex\">\n                        <div style = \"margin-Left: 2%; width: 50%\" >\n\n<p> If you click any two numbers (below), they switch locations and a \"BACK\" button appears. If you go back and click two numbers, the result gets inserted  at your location.</p>\n<p> I can use simple variables knowing they will never clash with a similarly named variable in a differenct module. Svelte code is consise and efficient. Coding in Svelte is so relaxing. </p>\n\n<br>\n<br>\n\t<button on:click={back}>\n\t\tBACK\n\t</button>\n<br>\n<br>\n   <div style=\"text-indent:20px\"><button>{ j }</button></div>\n<br>\n\t<button on:click={forward}>\n\t\tFORWARD\n\t</button>\n <br>\n <br>\n                        </div>\n                     <div style = \"marginRight: 2%; width: 50%;\">\n<br><br><br><br><br><br><br><br><br><br>\n<button id = m0  on:click = {ob.push} >{cache[j][0]}</button>\n<button id = m1  on:click = {ob.push} >{cache[j][1]}</button>\n<button id = m2  on:click = {ob.push} >{cache[j][2]}</button>\n<br>\n<br>\n<button id = m3  on:click = {ob.push} >{cache[j][3]}</button>\n<button id = m4  on:click = {ob.push} >{cache[j][4]}</button>\n<button id = m5  on:click = {ob.push} >{cache[j][5]}</button>\n<br>\n<br>\n<button id = m6  on:click = {ob.push} >{cache[j][6]}</button>\n<button id = m7  on:click = {ob.push} >{cache[j][7]}</button>\n<button id = m8  on:click = {ob.push} >{cache[j][8]}</button>\n</div>\n</div>\n<p> This is the JavaScript code inside of the script tags except for the definitions of the variables \"code\" and \"html\", which are just the code and html cut and pasted inside of back quotes: </p>\n<pre>{code}</pre>\n<p> And here is the HTML code: </p>\n<pre>{html}</pre>\n<p> I'm new to Svelte and so far I am very impressed. </p>\n","<script>\nimport {fade} from \"svelte/transition\"\nlet visible = true;\n\n\nvar k  = 100000000;\n$: k;\nvar ltTest = x => y => new Filt(x => y < x);\n$: ltTest;\n\nvar isOdd = function isOdd (x) {return new Filt(v => v % 2 === 1)};\nvar _fives = function _fives (x) {\n if (typeof x === \"number\") {return new Filt(v => v % 10 === 5)}\n else if (typeof x === \"string\") {return Filt(v = v(v.length - 1))}\n else {return undefined}''\n}\n\nvar fives = function fives (x) {return new Filt(v => v % 10 === 5)}\n\nvar isOddF = function isOddF (x) {return new Filt(v => v % 2 === 1)};\n\nfunction isOd_ (x) {return new Filt(v => v % 2 === 1)};\nvar lessThan = x => y => new Filt(x => y < x);\n\nfunction tdReduce(base) {\n  return function(reducingFunction) {\n    return (accumulator, value) => {\n      return reducingFunction(accumulator, func(v));\n    }\n  }\n}\n\nfunction tdMap(func) {\n  return function(reducingFunction) {\n    return (accumulator, v) => {\n      return reducingFunction(accumulator, func(v));\n    }\n  }\n}\n\nfunction tdFilter(test) {\n  return function(reducingFunction) {\n    return (accumulator, v) => {\n      return (test(v) ? reducingFunction(accumulator, v) : accumulator)\n    };\n  };\n};\n\nvar ar = \"cowgirl\";\n$: ar;\n\nvar cleanF = function cleanF (arthur = []) {\n  ar = arthur;\n  return ar.filter(\n    a => a === 0 || a && typeof a !== \"boolean\" //\n  ).reduce((a,b)=>a.concat(b),[])\n};\n\n$: cleanF;\n\n\nfunction Monad ( AR = [] )  {\n  var f_, p, run;\n  var ar = AR.slice();\n  var x = ar.pop();\n  return run = (function run (x) {\n    if (x === null || x === NaN ||\n      x === undefined) x = f_('stop').pop();\n    if (x instanceof Filt) {\n      var z = ar.pop();\n      if (x.filt(z)) x = z; else ar = [];\n    }\n    else if (x instanceof Promise) x.then(y =>\n      {if (y != undefined && typeof y !== \"boolean\" && y === y &&\n      y.name !== \"f_\" &&\n      y.name !== \"stop\" ) {\n      ar.push(y);\n    }})\n    else if (x != undefined && x === x  && x !== false\n      && x.name !== \"f_\" && x.name !== \"stop\" ) {\n      ar.push(x);\n    };\n    function f_ (func) {\n      if (func === 'stop' || func === 'S') return ar;\n      else if (func === 'finish' || func === 'F') return Object.freeze(ar);\n      else if (typeof func !== \"function\") p = func;\n      else if (x instanceof Promise) p = x.then(v => func(v));\n      else p = func(x);\n      return run(p);\n    };\n\n    return f_;\n  })(x)\n}\n\nvar mon44 = `function Monad ( AR = [] )  {\n  var f_, p, run;\n  var ar = AR.slice();\n  var x = ar.pop();\n  return run = (function run (x) {\n    if (x === null || x === NaN ||\n      x === undefined) x = f_('stop').pop();\n    if (x instanceof Filt) {\n      var z = ar.pop();\n      if (x.filt(z)) x = z; else ar = [];\n    }\n    else if (x instanceof Promise) x.then(y =>\n      {if (y != undefined && typeof y !== \"boolean\" && y === y &&\n      y.name !== \"f_\" &&\n      y.name !== \"stop\" ) {\n      ar.push(y);\n    }})\n    else if (x != undefined && x === x  && x !== false\n      && x.name !== \"f_\" && x.name !== \"stop\" ) {\n      ar.push(x);\n    };\n    function f_ (func) {\n      if (func === 'stop' || func === 'S') return ar;\n      else if (func === 'finish' || func === 'F') return Object.freeze(ar);\n      else if (typeof func !== \"function\") p = func;\n      else if (x instanceof Promise) p = x.then(v => func(v));\n      else p = func(x);\n      return run(p);\n    };\n\n    return f_;\n  })(x)\n} `\n\nvar compose = (...fns) =>\nfns.reduceRight((prevFn, nextFn) =>\n(...args) => nextFn(prevFn(...args)),\nvalue => value\n);\n\nvar add1 = function add1(v) { return v + 1; };\nvar sum = function sum(total,v) { return total + v; };\nvar cube = function cube(v) { return v**3; };\n\nvar size = 100;\n$: size;\n\nvar ar74 = [...Array(size).keys()];\n$: ar74;\n\nvar mapWRf = mapping(cube);\nvar mapRes = ar74.reduce(mapWRf(concat), []);\n\nvar isEven = x => x % 2 === 0;\nvar not = x => !x;\nvar isOdd2 = compose(not, isEven);\n\nfunction curry(fn) {\n   var arity = fn.length;\n   return function $curry(...args) {\n      if (args.length < arity) {\n         return $curry.bind(null, ...args);\n      }\n      return fn.call(null, ...args);\n   }  ;\n}\n\nvar map = f => ar => ar.map(v=>f(v));\nvar filter = p => ar => ar.filter(p);\nvar reduce = f => ar => v => ar.reduce(f,v)\nfunction apply(x, f) {return f(x);}\nfunction concat(xs, val) {return xs.concat(val);}\n\nfunction mapping(f) {\n   return function(rf) {\n      return (acc, val) => {\n         return rf(acc, f(val));\n      }\n   }\n}\n\nvar A_A = \"H\";\n$: A_A;\n\nvar B_B = \"s\";\n$: B_B;\n\nvar C_C = \"G\";\n$: C_C;\n\nvar D_D = \"I\";\n$: D_D;\n\nvar res1;\n// $: res1;\n\nvar res2;\n// $: res2;\n\nvar res3;\n$: res3;\n\nvar res4;\n$: res4;\n\nvar dotResult = [];\n$: dotResult;\n\nvar test9;\n$: test9;\n\nvar transducerResult;\n$: transducerResult;\n\n\n A_A = dotResult = ar74\n   .filter(v => (v % 2 === 1))\n   .map(x => x**4)\n   .map(x => x+3)\n   .map(x => x-3)\n   .filter(v => v % 10 === 5)\n   .map(x => Math.sqrt(x))\n   .map(v=>v*v)\n   .map(v=>v+1000)\n\n\nvar td3;\n$: td3;\n\nvar xform;\n$: xform;\n\nvar xform2;\n$: xform2;\n\nvar xform3;\n$: xform3\n\n\nvar test8 = k => ltTest(k).filt;;\n\nvar test9\n$: test9;\n\n  function Filt (p) {this.p = p; this.filt = function filt (x) {return p(x)}};\n  var fives = function fives (x) {return new Filt(v => v % 10 === 5)}\n\n  var td1 = x => Monad([x])(isOdd)(v=>v**4)(v=>v+3)(v=>v-3)(fives)(Math.sqrt)('stop').pop()\n  var td2 = y => Monad([y])(v=>v*v)(v=>v+1000)('stop').pop()\n\nres1 = ar74.map(x => td1(x));\nB_B = res2 = res1.map(y => td2(y));\nC_C = res3 = ar74.map(z => td2(td1(z)));\n\n\n   xform = compose(\n      tdFilter(x=>x%2===1),\n      tdMap(x => x**4),\n      tdMap(x => x+3),\n      tdMap(x => x-3),\n      tdFilter(x => x % 10 === 5),\n      tdMap(x => Math.sqrt(x))\n   )\n   xform2 = compose(\n      tdMap(x=>x*x),\n      tdMap(x=>x+1000)\n   );\n\n   xform3 = compose(\n      tdFilter(x=>x%2===1),\n      tdMap(x => x**4),\n      tdMap(x => x+3),\n      tdMap(x => x-3),\n      tdFilter(x => x % 10 === 5),\n      tdMap(x => Math.sqrt(x)),\n      tdMap(x=>x*x),\n      tdMap(x=>x+1000)\n   );\n   D_D = transducerResult = ar74.reduce(xform3(concat),[] );\n   $: transducerResult = ar74.reduce(xform3(concat),[] );\n\n   $: A_A = dotResult;\n   $: B_B = cleanF(res2);\n   $: C_C = cleanF(res3);\n   $: D_D = transducerResult;\n\nvar t37;\n$: t37;\nfunction test37 (e) {t37 = e; console.log(e)};\n\n\n$: dotResult;\n$: res2;\n$: res3;\n$: transducerResult;\n\nvar callback = `function increase () {\n  size = size + 10;\n  ar74 = [...Array(size).keys()];\n   A_A = dotResult = ar74\n   .filter(v => (v % 2 === 1))\n   .map(x => x**4)\n   .map(x => x+3)\n   .map(x => x-3)\n   .filter(v => v % 10 === 5)\n   .map(x => Math.sqrt(x))\n   .map(v=>v*v)\n  res1 = ar74.map(x => td1(x));\n  B_B = res2 = res1.map(y => td2(y));\n  C_C = res3 = ar74.map(z => td2(td1(z)));\n  D_D = transducerResult = ar74.reduce(xform3(concat),[] );\n}\n\n  function Filt (p) {this.p = p; this.filt = function filt (x) {return p(x)}};\n  var fives = function fives (x) {return new Filt(v => v % 10 === 5)}\n  var isOdd = function isOdd (x) {return new Filt(v => v % 2 === 1)};\n\n  var td1 = x => Monad([x])(isOdd)(v=>v**4)(v=>v+3)\n    (v=>v-3)(fives)(Math.sqrt)('stop').pop()\n  res1 = ar74.map(x => td1(x));\n  var td2 = y => Monad([y])(v=>v*v)(v=>v+1000)('stop').pop()`\n\nvar call2 = `xform3 = compose(\n    tdFilter(x=>x%2===1),\n    tdMap(x => x**4),\n    tdMap(x => x+3),\n    tdMap(x => x-3),\n    tdFilter(x => x % 10 === 5),\n    tdMap(x => Math.sqrt(x)),\n    tdMap(x=>x*x),\n    tdMap(x=>x+1000)\n  );\n\n  function tdMap(func) {\n    return function(reducingFunction) {\n      return (accumulator, v) => {\n        return reducingFunction(accumulator, func(v));\n      }\n    }\n  }\n\n  function tdFilter(test) {\n    return function(reducingFunction) {\n      return (accumulator, v) => {\n        return (test(v) ? reducingFunction(accumulator, v) : accumulator)\n      };\n    };\n  }; `\n\n  function increase () {\n    size = size + 10;\n    ar74 = [...Array(size).keys()];\n    res1 = ar74.map(x => td1(x));\n     A_A = dotResult = ar74\n     .filter(v => (v % 2 === 1))\n     .map(x => x**4)\n     .map(x => x+3)\n     .map(x => x-3)\n     .filter(v => v % 10 === 5)\n     .map(x => Math.sqrt(x))\n     .map(v=>v*v)\n     .map(v=>v+1000)\n    B_B = res2 = res1.map(y => td2(y));\n    C_C = res3 = ar74.map(z => td2(td1(z)));\n    D_D = transducerResult = ar74.reduce(xform3(concat),[] );\n  }\n\nfunction decrease () {\n  size = size - 10;\n  ar74 = [...Array(size).keys()];\n  res1 = ar74.map(x => td1(x));\n   A_A = dotResult = ar74\n   .filter(v => (v % 2 === 1))\n   .map(x => x**4)\n   .map(x => x+3)\n   .map(x => x-3)\n   .filter(v => v % 10 === 5)\n   .map(x => Math.sqrt(x))\n   .map(v=>v*v)\n   .map(v=>v+1000)\n  B_B = res2 = res1.map(y => td2(y));\n  C_C = res3 = ar74.map(z => td2(td1(z)));\n  D_D = transducerResult = ar74.reduce(xform3(concat),[] );\n}\n\n$: size;\n$: ar74;\n$: increase;\n$: decrease;\nincrease();\ndecrease();\n  </script>\n<style>\n.p {\n  color: #FFAAAA;;\n  font-size: 20px;\n}\n.q {\n  color: #FFFFAA;\n}\n</style>\n<br><br><br>\n{#if visible}\n <div style = \"font-family: Times New Roman;  text-align: center; color: hsl(210, 90%, 90%); font-size: 32px;\" transition:fade>\nTRANSDUCER SIMULATION\n </div>\n{/if}\n<br><br>\n\n<p> The tradition JavaScript method of composing functions using mainly map, filter, and reduce dot notation (eg. \"array.map(func1).filter(func2).map(func3)\") polutes memory with arrays that are used only to compute the next array in a chain. Moreover, each of the soon-to-be useless arrays must be traversed. When arrays are large and numerous functions are involved, this can be a performance bottleneck.</p>\n<p> Transducers provide an ingenious solution to the problem. Any JavaScript developer who hasn't already done so would do well to get a good night's sleep, drink a big cup of coffee, and wrap his or her head around the transducer algorithm.</p>\n<p> Another, more straightforward one-array-traversal solution is to use monads. This post shows the result of an array being traversed only one time and, with the help of a monad, undersoing multiple transformations by a collection of functions. The result is the same result obtained by the dot method and a standard transducer.</p>\n<p> The following results were obtained by eight transformations on an array of the first 100 integers:</p>\n<br><br>\n<div class = p> Traditional dot composition </div>\n<br>\n<div class = q >[{A_A.join(\", \")}]</div>\n<br>\n<br>\n<div class = p> Composition in two stages using Monad </div>\n<br>\n<div class = q > [{B_B.join(\", \")}]</div>\n<br>\n<br>\n<div class = p> Composition in one traversal using Monad </div>\n<br>\n<div class = q > [{C_C.join(\", \")}]</div>\n<br>\n<br>\n<div class = p> Composition using a standard transducer </div>\n<br>\n<div class = q > [{D_D.join(\", \")}]</div>\n<br>\n<br>\n<button class = but on:click = {increase}>INCREASE</button>\n<button class = but on:click = {decrease}>DECREASE</button>\n<br><br>\n<div>Array length: {size}</div>\n<br>\n<div>ar74: [{ar74.join(\", \")}]</div>\n<br>\n<div>The modified Monad (below) could benefit from some refactoring, but it does what needs to be done for this demo. The point is that a standard transducer and Monad both use one array traversal to accomplish what the built-in dot method does by traversing the original array and seven intermediary arrays. </div>\n<pre>{mon44}</pre>\n<p> On my desktop computer, when ar74.length === 100,000 I got this and similar results: </p>\n<div style = \"color: #BBFFBB\">ar74.length = 100,000:</div>\n\n<pre>Dot method:: 25 ms\nMonad two traversals: 255 ms\nMonad one traversal: 220 ms\nTransducer: 26 ms </pre>\n<p> ar74.length === 1,000,000 was about as far as I could go without crashing the browser. Here are two typical results: </p>\n\n<div style = \"color: #BBFFBB\">Two runs with ar74.length = 1,000,000:</div>\n\n<pre>Dot method:: 276\nMonad two traversals: 2140\nMonad one traversal: 2060\nTransducer: 180\n\nDot method:: 312\nMonad two traversals: 2093\nMonad one traversal: 2115\nTransducer: 176 </pre>\n<p> As you see, the built-in JavaScript dot method and the transducer gave similar results. The Monad methods are much slower. They're just a proof-of-concept hacks showing the versitility of monads spawned by Monad(). </p>\n<p> Here's the definition of the increase button's callback function along with the definitions of some assoc some supportingrelated: </p>\n<pre>{callback}</pre>\n<p> And here's some of the code behind the transducer demonstration: </p>\n<pre>{call2}</pre>\n<span> The rest of the code can be found in the </span>\n<a href = \"https://github.com/dschalk/blog\">Github repository</a>\n<span>.</span>\n","<script>\n\tlet dark = false;\n\tconst toggleTheme = () => dark = dark === false\n</script>\n\n<svelte:head>\n\t{#if dark}\n\t<link rel=\"stylesheet\" href=\"style.css\">\n\t{/if}\n</svelte:head>\n\n<h1>Hello World!</h1>\n\n<button on:click={toggleTheme}>\n\ttoggle theme\n</button>\n","\n<script>\n\n   import {fade} from \"svelte/transition\"\n   let visible = true;\n\n    import Monad from './Monad.svelte'\n    import Monad2 from './Monad2.svelte'\n    import Monad3 from './Monad3.svelte'\n    import Haskell from './Haskell.svelte'\n    import Bugs from './Bugs.svelte'\n    import Matrix from './Matrix.svelte'\n    import Transducer from './Transducer.svelte'\n    import ToggleTheme from './ToggleTheme.svelte'\n    import Home from './Home.svelte'\n    import Score from './Score.svelte'\n\n    let j = 0;\n    $: j;\n\n    var oldj = false;\n\n    function monad () {\n      if (oldj) {\n      j = oldj;\n      j = 1;\n      oldj = false;\n      console.log(\"j and oldj\", j, oldj)\n    }\n    };\n    function monad2 () {\n      j = 2;\n      oldj = true;\n      console.log(j)\n    };\n    function monad3 () {\n      if (oldj) {\n        j = 2;\n        j = 3;\n        oldj = false;\n        console.log(\"j and oldj\", j, oldj)\n      }\n    };\n    function transducer () {\n      if (oldj) {\n      j = oldj;\n      j = 3;\n      oldj = false;\n      console.log(\"j and oldj\", j, oldj)\n    }\n    };\n\n\n\n\n\n  //  function monad3 () {j = 9; console.log(j)};\n    function haskell () {j = 3; console.log(j)};\n    function bugs () {j = 4; console.log(j)};\n    function matrix () {j = 5; console.log(j)};\n    function transduce () {j = 6}; console.log(j);\n    function async () {j = 7; console.log(j)};\n    function tog () {j = 8; console.log(j)};\n    function score () {j = 10; console.log(j)};\n    function home () {j = 0; console.log(j)};\n\n    console.log(\"j is\", j)\n\n</script>\n\n<style>\ndiv {\n   font-size: 18px;\n   color: #bccbaa;\n}\n\n.gamma {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n\n  ul {  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n  list-style: none;\n  }\n\n  tao {\n    margin-left: 3%;\n  }\n\n  .narrow {\n    font-family: monospace;\n    font-size: 22px;\n    margin-left: auto;  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n    margin-right: auto;\n    display: block;\n    text-indent: 1.6%;\n  }\n</style>\n<div class=\"content\">\n<br><br>\n\n                        <div style = \"display: flex\">\n\n                        <div style = \"margin-Right: 2%; width: 20%\" >\n                        <br><br><br><br><h1>j is {j}></h1><br><br><br>\n                        <ul style = \"list-style: none;\">\n                        <li><div class='button'  on:click={() => j = 5}>Why Svelte</div></li>\n                        <br>\n                        <li><div>MONAD SERIES</div></li>\n                        <br>\n                        <li><div class='button' on:click={()=>{j = 1; console.log(\"j is\", j)}}>A Simple Monad</div></li>\n                        <br>\n                        <li><div class='button' on:click={()=>{j=2; console.log(\"j is\", j)}}>Asynchronous Monad</div></li>\n                        <br>\n                        <li><div class='button' on:click={()=>{j=9; console.log(\"j is\", j)}}>Promises Monad</div></li>\n                        <br>\n                        <li><div class='button' on:click={() => {j = 7; console.log(\"j is\", j)}}>Transducer Simulator</div></li>\n                        <br>\n                        <li><div class='button' on:click={()=>{j=10; console.log(\"j is\", j)}}>Game of Score</div></li>\n                        <br>\n                        <li><div>MISCELANEOUS TOPICS</div></li>\n                        <br>\n                        <li><div class='button' on:click={() => {j = 3; console.log(\"j is\", j)}}>Hidden Haskell Information</div></li>\n                        <br>\n                        <li><div class='button' on:click={() => {j = 4; console.log(\"j is\", j)}}>Bed Bug Eradication</div></li>\n                        <br>\n                        <li><div class='button' on:click={() => {j = 8; console.log(\"j is\", j)}}>Toggle Theme</div></li>\n                        <br>\n                        <li><div class='button' on:click={() => {j = 0; console.log(\"j is\", j)}}>Home</div></li>\n                        <br>\n                        </ul>\n                        </div>\n                        <div style = \"margin-Right: 2%; width: 80%\" >\n                        <div style=\" font-weight: 900; font-size: 45px; color: #bbbb00; text-align: center; \">DAVID SCHALK'S BLOG</div>\n\n\n{#if j === 0}\n\t\t<Home />\n{/if}\n{#if j === 1}\n<Monad />\n{/if}\n{#if j === 2}\n<Monad2 />\n{/if}\n{#if j === 9}\n<Monad3 />\n{/if}\n{#if j === 3}\n<Haskell />\n{/if}\n{#if j === 4}\n<Bugs />\n{/if}\n{#if j === 5}\n<Matrix />\n{/if}\n{#if j === 7}\n<Transducer />\n{/if}\n{#if j === 8}\n<ToggleTheme />\n{/if}\n{#if j === 10}\n<Score />\n{/if}\n\n\n<br><br><br>\n</div>\n</div>\n</div>\n<br><br>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;(base)\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","stylesheet","running","run_tasks","task","delete","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","setProperty","current_component","active","current_rules","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","head","sheet","insertRule","cssRules","animation","delete_rule","split","filter","anim","indexOf","join","deleteRule","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","promise","update_scheduled","add_render_callback","push","flush","seen_callbacks","shift","update","$$","pop","callback","has","add","fragment","dirty","before_update","ctx","after_update","dispatch","direction","kind","dispatchEvent","type","detail","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","fulfil","loop","[object Object]","then","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","detaching","make_dirty","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","callbacks","ready","hydrate","l","Array","from","childNodes","SvelteComponent","this","$destroy","index","splice","fade","getComputedStyle","opacity","bonads","num","monadDisplay","bonadsD","axe","Monad","z","foo","func","prod","sum","v","stop","mona","console","log","undefined","O","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","c10","c11","c12","c13","c14","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","d10","d11","d12","d13","d14","mon","statement","fa","fac","onmessServer","onmessWorker","factors","M","Q","lock","AR","ar","slice","concat","socket","WebSocket","onclose","onmessage","worker_O","postMessage","login","readyState","setTimeout","random","toString","substring","v2","combo","send","groupDelete","ob","startsWith","clearOb","fact","Worker","test","test_2","fs","code","async","squareP","wait","cubeP","sqrtP","ms","divP","addP","y","multP","branch","s","s2","resume","lok","cache","j","html","back","forward","parseInt","id","exchange","k","n","$$invalidate","A_A","B_B","C_C","D_D","ar74","mon44","call2","increase","decrease","tdMap","reducingFunction","accumulator","tdFilter","NaN","f_","Filt","filt","freeze","xs","val","f","res1","res2","res3","transducerResult","xform3","isOdd","cleanF","arthur","reduce","compose","reduceRight","prevFn","nextFn","args","keys","mapWRf","rf","acc","dotResult","sqrt","fives","td1","td2","toggleTheme","dark","body"],"mappings":"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"}